package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.33

import (
	"context"
	"fmt"

	graphqlApi "github.com/DmitryLogunov/trading-platform-backend/internal/app/graphql-api"
)

// GetTradings is the resolver for the getTradings field.
func (r *queryResolver) GetTradings(ctx context.Context) ([]*graphqlApi.Trading, error) {
	return r.GqlServices.TradingService.GetTradings(ctx, r.MongoDB)
}

// GetTradingByID is the resolver for the getTradingByID field.
func (r *queryResolver) GetTradingByID(ctx context.Context, id string) (*graphqlApi.Trading, error) {
	return r.GqlServices.TradingService.GetTradingByID(ctx, r.MongoDB, id)
}

// GetJobs is the resolver for the getJobs field.
func (r *queryResolver) GetJobs(ctx context.Context) ([]*graphqlApi.Job, error) {
	return r.GqlServices.JobsService.GetAllJobs(r.Scheduler)
}

// GetPricesChart is the resolver for the getPricesChart field.
func (r *queryResolver) GetPricesChart(ctx context.Context, ticker string) ([]*graphqlApi.Price, error) {
	panic(fmt.Errorf("not implemented: GetPricesChart - getPricesChart"))
}

// GetAlerts is the resolver for the getAlerts field.
func (r *queryResolver) GetAlerts(ctx context.Context, filters *graphqlApi.AlertsFiltersInput) ([]*graphqlApi.Alert, error) {
	return r.GqlServices.AlertsService.GetAlerts(ctx, r.MongoDB, filters)
}

// GetPositionByID is the resolver for the getPositionByID field.
func (r *queryResolver) GetPositionByID(ctx context.Context, id string) (*graphqlApi.Position, error) {
	return r.GqlServices.PositionsService.GetPositionByID(ctx, r.MongoDB, id)
}

// GetPositions is the resolver for the getPositions field.
func (r *queryResolver) GetPositions(ctx context.Context, tradingID string) ([]*graphqlApi.Position, error) {
	return r.GqlServices.PositionsService.GetPositions(ctx, r.MongoDB, tradingID)
}

// Query returns graphqlApi.QueryResolver implementation.
func (r *Resolver) Query() graphqlApi.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
